read.csv(file=origin, header = T)
read.csv(file=file.choose(), header = T)
file <- read.table(file=file.choose(), header = T)
file <- read.table(file=file.choose(), header = T)
file
correlations <- cor(file)
install.packages("corrplot")
library(corrplot)
install.packages("RColorBrewer")
library(RColorBrewer)
corrplot(correlations)
corrplot(correlations)
correlations <- cor(file[,2:5])
corrplot(correlations)
par(mfrow=c(1,1))
corrplot(correlations)
par(fig=c(0.2,0.8, 0.2, 0.8))
corrplot(correlations)
dev.off()
dev.off()
par(fig=c(0.1,0.9, 0.1, 0.9))
corrplot(correlations)
par(fig=c(0.2,0.8, 0.2, 0.8))
corrplot(correlations)
help("corrplot")
corrplot(correlations, cl.pos = "b")
library(corrplot)
library(RColorBrewer)
file <- read.table(file=file.choose(), header = T)
file <- read.table(file=file.choose(), header = T)
file
rm(file)
install.packages("ggplot2")
install.packages("microbenchmark")
install.packages("profvis")
vignette(package="dplyr")
install.packages("dplyr")
vignette("dplyr", "introduction")
vignette("dplyr")
install.packages("tidyverse")
seq(0,19,1)
seq(0,18,1)
t = seq(0,18,1)
t/2
t/2 - 4.75
rm(t)
exit()
exit
t = seq(0,18,1)
t
t / 2 - 4.75
t / 2 - 5.0
rm(t)
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x= displ, y= hwy))
geom_point(mapping = aes(x= class, y= hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x= class, y= hwy))
ggplot(data = mpg)+
geom_point(x=displ, y=hwy, color=class)
geom_point(mapping=aes(x=displ, y=hwy, color=class))
ggplot(data = mpg)+
geom_point(mapping=aes(x=displ, y=hwy, color=class))
setwd("C:/Projekte/OpenData/Test/")
read.table(file="./data/station_data.txt.txt", sep = "  ", header = T)
read.table(file="./data/station_data.txt.txt", sep = "", header = T)
read.table(file="./data/station_data.txt.txt", sep = "", header = F)
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 1)
?read.table
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 1, na.strings = "")
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 1, na.strings = "", stringsAsFactors = F)
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 2, na.strings = "", stringsAsFactors = F)
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 1, na.strings = "")
read.table(file="./data/station_data.txt.txt", sep = "", header = F, skip = 1, na.strings = "")
read.csv(file="./data/station_data.txt.txt", sep="", header=F, skip=2, na.strings = "")
read.csv(file="./data/station_data.txt.txt", sep="  ", header=F, skip=2, na.strings = "")
read.csv(file="./data/station_data.txt.txt", sep="  ", header=F, skip=2, na.strings = "")
read.csv(file="./data/station_data.txt.txt", sep="", header=F, skip=2, na.strings = "")
data <- read.csv(file="./data/station_data.txt.txt", sep="", header=F, skip=2, na.strings = "")
is.character(data)
is.factor(data)
data <- as.character(data)
data
data[[1]]
data <- read.csv(file="./data/station_data.txt.txt", sep="", header=F, skip=2, na.strings = "")
data[,1]
as.character(data[,1])
cbind(as.character(data[,1:5]))
cbind(as.character(data[,1]),as.character(data[,2]),as.character(data[,3]),as.character(data[,4]),as.character(data[,5]))
data_char <- cbind(as.character(data[,1]),as.character(data[,2]),as.character(data[,3]),as.character(data[,4]),as.character(data[,5]))
c(data_char[,1], data_char[,2])
data_column <- c(data_char[,1],data_char[,2],data_char[,3],data_char[,4],data_char[,5])
data_column
data_column[1:7]
data_column[180*3:(180*3+20)]
test <- c("NA", "Gorky Town", "670", "6700", "567718/155076")
?grepl
grep("[0-9]", test)
data_column
grep("[0-9]{4}", test)
pattern <- c("[0-9]{3}", "[0-9]{4}", "[0-9]{6}")
test <- cbind(test, "8째26'/46째46'")
test
test <- c("NA", "Gorky Town", "670", "6700", "567718/155076", "8째26'/46째46'")
grep(pattern, test)
grepl(pattern, test)
pattern
grep("[0-9]{3}"|"[0-9]{4}"|"[0-9]{6}", test)
grep("[0-9]{3}|[0-9]{4}|[0-9]{6}", test)
test
indizes <- grep("[0-9]{3}|[0-9]{4}|[0-9]{6}", data_column)
indizes
data_column[11]
data_column
data_column <- c(data_char[1,],data_char[2,],data_char[3,],data_char[4,],data_char[5,])
data_column
data_rows <- c()
for i in dim(data_char[1]){
data_rows <- c(data_rows, data_char[i,])
}
for i in 1:dim(data_char[1]){
data_rows <- c(data_rows, data_char[i,])
}
for (i in 1:dim(data_char[1]){
for (i in 1:dim(data_char[1])){
data_rows <- c(data_rows, data_char[i,])
}
for (i in 1:dim(data_char)[1]){
data_rows <- c(data_rows, data_char[i,])
}
data_rows
read.csv(file="./data/station_data.txt.txt", sep="", header=F, skip=2, na.strings = "")
# Using Regex for determining indices of coordinates and height values
pattern <- "[0-9]{3}|[0-9]{4}|[0-9]{6}"
indizes <- grep(pattern, data_rows)
indizes
# Get only needed values
correct <- data_rows[indizes]
correct
output <- matrix(correct, ncol = 2)
output
output <- matrix(correct, nrow = 2)
output
output <- t(output)
output
as.numeric(output)
rm(output)
rm(test)
rm(data)
rm(correct)
# reformat coordinates
coords <- selected[,1]
# Get only needed values and reformat it
correct <- data_rows[indizes]
selected <- matrix(correct, nrow = 2)
selected <- t(output)
selected <- t(selected)
selected
# reformat coordinates
coords <- selected[,1]
coords
strsplit(coords, "/")
splitted <- strsplit(coords, "/")
dim(splitted)
length(splitted)
lon <- c()
lat <- c()
for (i in 1:length(splitted)){
lon <- c(lon, splitted[[i]][1])
lat <- c(lat, splitted[[i]][2])
}
lon
lat
# convert all columns to numeric values
lon <- as.numeric(lon)
lat <- as.numeric(lat)
lat
height <- as.numeric(selected[,2])
height
# Final table
output <- cbind(lon, lat, height)
output
outfilename <- "./data/coord_wetterstationen"
write.csv(output, file = outfilename)
rm(list=ls())
# Specifications
filename <- "./data/station_data.txt.txt"
outfilename <- "./data/coord_wetterstationen"
# Read in Text-File
data <- read.csv(file=filename, sep = "", header = F, skip = 2, na.strings = "")
# Convert from Factors to Chars
data_char <- cbind(as.character(data[,1]),as.character(data[,2]),as.character(data[,3]),as.character(data[,4]),
as.character(data[,5]))
# Convert Table to single-row vector
data_rows <- c()
for (i in 1:dim(data_char)[1]){
data_rows <- c(data_rows, data_char[i,])
}
data_rows
# Using Regex for determining indices of coordinates and height values
pattern <- "[0-9]{3}|[0-9]{4}|[0-9]{6}|[a-z]{3}"
indizes <- grep(pattern, data_rows)
# Get only needed values and reformat it
correct <- data_rows[indizes]
correct
indizes_text <- grep(text_pattern, data_rows)
text_pattern <- "[a-z]{3}"
indizes_text <- grep(text_pattern, data_rows)
correct_text <- data_rows[indizes_text]
correct_text
# Clear Workspace
rm(list=ls())
# Specifications
filename <- "./data/station_data.txt.txt"
outfilename <- "./data/coord_wetterstationen"
# Read in Text-File
data <- read.csv(file=filename, sep = "", header = F, skip = 2, na.strings = "")
# Convert from Factors to Chars
data_char <- cbind(as.character(data[,1]),as.character(data[,2]),as.character(data[,3]),as.character(data[,4]),
as.character(data[,5]))
# Convert Table to single-row vector
data_rows <- c()
for (i in 1:dim(data_char)[1]){
data_rows <- c(data_rows, data_char[i,])
}
# Using Regex for determining indices of coordinates and height values
pattern <- "[0-9]{3}|[0-9]{4}|[0-9]{6}"
indizes <- grep(pattern, data_rows)
# Get only needed values and reformat it
correct <- data_rows[indizes]
selected <- matrix(correct, nrow = 2)
selected <- t(selected)
# reformat coordinates
coords <- selected[,1]
splitted <- strsplit(coords, "/")
lon <- c()
lat <- c()
for (i in 1:length(splitted)){
lon <- c(lon, splitted[[i]][1])
lat <- c(lat, splitted[[i]][2])
}
# convert all columns to numeric values
lon <- as.numeric(lon)
lat <- as.numeric(lat)
height <- as.numeric(selected[,2])
# Final table
output <- cbind(lon, lat, height)
write.csv(output, file = outfilename, row.names = F)
# Clear Workspace
rm(list=ls())
getwd()
(file <- read.csv2("data/stations_data.csv", header = T, sep = ";", na.strings = "-"))
100-80
0.15*(100-80)
0.15*(100-22)
file <- as.data.frame(file)
index <- rep(NA, length(file[,1]))
cols <- colnames(file)
for(i in 1:length(file[,1])){
temp <- as.numeric(file[i,7])
print(temp)
prec <- as.numeric(file[i,8])
sun <- as.numeric(file[i,9])
glob <- as.numeric(file[i,10])
feu <- as.numeric(file[i,11])
wind <- as.numeric(file[i,14])
if(!(is.na(temp) || is.na(prec) ||is.na(sun) ||is.na(glob) ||is.na(feu) ||is.na(wind))){
index[i] <- 0.4*temp + 0.2*prec + 0.05*sun + 0.05*glob + 0.15*(100-feu) + 0.15*wind
}
}
index <- as.integer(index)
file[,16] <- index
write.csv(file, "badeindex.csv", row.names = F, na = "-")
(file <- read.csv2("data/stations_data.csv", header = T, sep = ";", na.strings = "-"))
file <- as.data.frame(file)
index <- rep(NA, length(file[,1]))
cols <- colnames(file)
for(i in 1:length(file[,1])){
temp <- as.numeric(file[i,7])
print(temp)
prec <- as.numeric(file[i,8])
sun <- as.numeric(file[i,9])
glob <- as.numeric(file[i,10])
feu <- as.numeric(file[i,11])
wind <- as.numeric(file[i,14])
if(!(is.na(temp) || is.na(prec) ||is.na(sun) ||is.na(glob) ||is.na(feu) ||is.na(wind))){
index[i] <- 0.4*temp + 0.2*prec + 0.05*sun + 0.05*glob + 0.15*feu + 0.15*wind
}
}
index <- as.integer(index)
file[,16] <- index
write.csv(file, "badeindex.csv", row.names = F, na = "-")
file
(file <- read.csv2("data/stations_data.csv", header = T, sep = ";", na.strings = "-"))
file <- as.data.frame(file)
index <- rep(NA, length(file[,1]))
cols <- colnames(file)
for(i in 1:length(file[,1])){
temp <- as.numeric(file[i,7])
print(temp)
prec <- as.numeric(file[i,8])
sun <- as.numeric(file[i,9])
glob <- as.numeric(file[i,10])
feu <- as.numeric(file[i,11])
wind <- as.numeric(file[i,14])
if(!(is.na(temp) || is.na(prec) ||is.na(sun) ||is.na(glob) ||is.na(feu) ||is.na(wind))){
index[i] <- 0.4*temp + 0.2*prec + 0.05*sun + 0.05*glob + 0.15*feu + 0.15*wind
}
}
index <- as.integer(index)
file[,16] <- index
write.csv(file, "badeindex.csv", row.names = F, na = "-")
getwd()
